Microsoft (R) Macro Assembler Version 14.29.30136.0	    11/30/21 17:20:56
main.asm						     Page 1 - 1


				.386P

				.model flat

				extern _GetStdHandle@4:near
				extern _ExitProcess@4: near
				extern _WriteConsoleA@20:near
				extern _ReadConsoleA@20:near
				extern _ExitProcess@4: near
				; extern _PrintLine


 00000000			.data

 00000000 00000000		readHandle			dword	?
 00000004 00000000		handle				dword	?
 00000008 00000000		written				dword	?

 0000000C 45 6E 74 65 72	msg		byte	'Enter number 1: ', 10
	   20 6E 75 6D 62
	   65 72 20 31 3A
	   20 0A
 0000001D 45 6E 74 65 72	msg2	byte	'Enter number 2: ', 10
	   20 6E 75 6D 62
	   65 72 20 32 3A
	   20 0A
 0000002E 54 68 65 20 6D	result	byte	'The multiplcation result is: ', 10
	   75 6C 74 69 70
	   6C 63 61 74 69
	   6F 6E 20 72 65
	   73 75 6C 74 20
	   69 73 3A 20 0A

 0000004C  00000100 [		input				byte	256 DUP(00h)
	    00
	   ]
 0000014C 00			read				byte	?
 0000014D 00000000		numofBytestoRead	dword	?

 00000000			.code

 00000000			WriteLine PROC near

 00000000			_WriteLine:

 00000000  55				push ebp						; Save the old base pointer
 00000001  8B EC			mov ebp, esp					; Set new base pointer

					; handle = GetStdHandle(-11)
 00000003  6A F5			push	-11
 00000005  E8 00000000 E		call	_GetStdHandle@4

 0000000A  A3 00000004 R		mov		handle, eax

					; WriteConsole(handle, &msg[0], 17, &written, 0)
 0000000F  6A 00			push	0
 00000011  68 00000008 R		push	offset written
 00000016  6A 11			push	17
 00000018  68 0000000C R		push	offset msg
 0000001D  FF 35 00000004 R		push	handle
 00000023  E8 00000000 E		call	_WriteConsoleA@20
 00000028  5D				pop		ebp
 00000029  C3				ret

 0000002A			WriteLine ENDP

 0000002A			WriteLine2 PROC near

 0000002A  55				push ebp						; Save the old base pointer
 0000002B  8B EC			mov ebp, esp					; Set new base pointer

					; handle = GetStdHandle(-11)
 0000002D  6A F5			push	-11
 0000002F  E8 00000000 E		call	_GetStdHandle@4

 00000034  A3 00000004 R		mov		handle, eax

					; WriteConsole(handle, &msg[0], 17, &written, 0)
 00000039  6A 00			push	0
 0000003B  68 00000008 R		push	offset written
 00000040  6A 11			push	17
 00000042  68 0000001D R		push	offset msg2
 00000047  FF 35 00000004 R		push	handle
 0000004D  E8 00000000 E		call	_WriteConsoleA@20
 00000052  5D				pop		ebp
 00000053  C3				ret

 00000054			WriteLine2 ENDP

 00000054			ResultLine PROC near

 00000054  55				push ebp						; Save the old base pointer
 00000055  8B EC			mov ebp, esp					; Set new base pointer

					; handle = GetStdHandle(-11)
 00000057  6A F5			push	-11
 00000059  E8 00000000 E		call	_GetStdHandle@4

 0000005E  A3 00000004 R		mov		handle, eax

					; WriteConsole(handle, &msg[0], 17, &written, 0)
 00000063  6A 00			push	0
 00000065  68 00000008 R		push	offset written
 0000006A  6A 1E			push	30
 0000006C  68 0000002E R		push	offset result
 00000071  FF 35 00000004 R		push	handle
 00000077  E8 00000000 E		call	_WriteConsoleA@20
 0000007C  5D				pop		ebp
 0000007D  C3				ret

 0000007E			ResultLine ENDP

 0000007E			ReadLine PROC near
					
 0000007E  55				push ebp						; Save the old base pointer
 0000007F  8B EC			mov ebp, esp					; Set new base pointer
 00000081  8B 5D 08			mov ebx, [ebp+8]				; Getting parameter that we want (string address)

 00000084			_Reading:

 00000084  6A F6			push -10							
 00000086  E8 00000000 E		call _GetStdHandle@4

 0000008B  A3 00000000 R		mov		readHandle, eax

					; ReadConsole (handle, &msg[0], numofCharsToRead, )
 00000090  6A 00			push	0
 00000092  68 0000014C R		push	offset read
 00000097  6A 07			push	7
 00000099  68 0000004C R		push	offset input
 0000009E  FF 35 00000000 R		push	readHandle
 000000A4  E8 00000000 E		call	_ReadConsoleA@20
 000000A9  5D				pop		ebp
 000000AA  C3				ret

 000000AB			ReadLine ENDP

 000000AB			ReadLine2 PROC near
					
 000000AB  55				push ebp						; Save the old base pointer
 000000AC  8B EC			mov ebp, esp					; Set new base pointer
 000000AE  8B 5D 08			mov ebx, [ebp+8]				; Getting parameter that we want (string address)

 000000B1  6A F6			push	-10							
 000000B3  E8 00000000 E		call	_GetStdHandle@4
 000000B8  A3 00000000 R		mov		readHandle, eax

					; ReadConsole (handle, &msg[0], numofCharsToRead, )
 000000BD  6A 00			push	0
 000000BF  68 0000014C R		push	offset read
 000000C4  6A 07			push	7
 000000C6  68 0000004C R		push	offset input
 000000CB  FF 35 00000000 R		push	readHandle
 000000D1  E8 00000000 E		call	_ReadConsoleA@20
 000000D6  5D				pop		ebp
 000000D7  C3				ret

 000000D8			ReadLine2 ENDP

 000000D8			atoi PROC near



 000000D8			atoi ENDP


 000000D8			itoa PROC near



 000000D8			itoa ENDP

 000000D8			main PROC near

 000000D8			_main:
					
 000000D8  68 0000000C R		push offset msg
 000000DD  E8 FFFFFF1E			call WriteLine

 000000E2  E8 FFFFFF97			call ReadLine

 000000E7  68 0000001D R		push offset msg2
 000000EC  E8 FFFFFF39			call WriteLine2

 000000F1  E8 FFFFFFB5			call ReadLine2

 000000F6  E8 FFFFFF59			call ResultLine

 000000FB  6A 00			push 0
 000000FD  E8 00000000 E		call _ExitProcess@4

 00000102			main ENDP
				END
Microsoft (R) Macro Assembler Version 14.29.30136.0	    11/30/21 17:20:56
main.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000151 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000102 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ReadLine2  . . . . . . . . . . .	P Near	 000000AB _TEXT	Length= 0000002D Public
ReadLine . . . . . . . . . . . .	P Near	 0000007E _TEXT	Length= 0000002D Public
  _Reading . . . . . . . . . . .	L Near	 00000084 _TEXT	
ResultLine . . . . . . . . . . .	P Near	 00000054 _TEXT	Length= 0000002A Public
WriteLine2 . . . . . . . . . . .	P Near	 0000002A _TEXT	Length= 0000002A Public
WriteLine  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000002A Public
  _WriteLine . . . . . . . . . .	L Near	 00000000 _TEXT	
atoi . . . . . . . . . . . . . .	P Near	 000000D8 _TEXT	Length= 00000000 Public
itoa . . . . . . . . . . . . . .	P Near	 000000D8 _TEXT	Length= 00000000 Public
main . . . . . . . . . . . . . .	P Near	 000000D8 _TEXT	Length= 0000002A Public
  _main  . . . . . . . . . . . .	L Near	 000000D8 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_ExitProcess@4 . . . . . . . . .	L Near	 00000000 FLAT	External
_GetStdHandle@4  . . . . . . . .	L Near	 00000000 FLAT	External
_ReadConsoleA@20 . . . . . . . .	L Near	 00000000 FLAT	External
_WriteConsoleA@20  . . . . . . .	L Near	 00000000 FLAT	External
handle . . . . . . . . . . . . .	DWord	 00000004 _DATA	
input  . . . . . . . . . . . . .	Byte	 0000004C _DATA	
msg2 . . . . . . . . . . . . . .	Byte	 0000001D _DATA	
msg  . . . . . . . . . . . . . .	Byte	 0000000C _DATA	
numofBytestoRead . . . . . . . .	DWord	 0000014D _DATA	
readHandle . . . . . . . . . . .	DWord	 00000000 _DATA	
read . . . . . . . . . . . . . .	Byte	 0000014C _DATA	
result . . . . . . . . . . . . .	Byte	 0000002E _DATA	
written  . . . . . . . . . . . .	DWord	 00000008 _DATA	

	   0 Warnings
	   0 Errors
